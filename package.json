{
  "name": "ethereumjs-vm",
  "version": "4.2.0",
  "description": "An Ethereum VM implementation",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist/**/*"
  ],
  "scripts": {
    "build": "ethereumjs-config-build",
    "prepublishOnly": "npm run lint && npm run build && npm run test:buildIntegrity",
    "coverage": "nyc npm run coverage:test && nyc report --reporter=lcov",
    "coverage:test": "npm run build && tape './tests/api/**/*.js' ./tests/tester.js --state --dist",
    "docs:build": "typedoc lib",
    "test:vm": "node ./tests/tester --vm",
    "test:state": "ts-node ./tests/tester --state",
    "test:state:allForks": "npm run test:state -- --fork=Byzantium && npm run test:state -- --fork=Constantinople && npm run test:state -- --fork=Petersburg && npm run test:state -- --fork=Istanbul && npm run test:state -- --fork=MuirGlacier",
    "test:state:selectedForks": "npm run test:state -- --fork=Petersburg && npm run test:state -- --fork=Istanbul && npm run test:state -- --fork=MuirGlacier",
    "test:state:slow": "npm run test:state -- --runSkipped=slow",
    "test:buildIntegrity": "npm run test:state -- --test='stackOverflow'",
    "test:blockchain": "node -r ts-node/register --stack-size=1500 ./tests/tester --blockchain",
    "test:API": "npm run build && ts-node ./node_modules/tape/bin/tape './tests/api/**/*.js'",
    "test:API:browser": "npm run build && karma start karma.conf.js",
    "test": "echo \"[INFO] Generic test cmd not used. See package.json for more specific test run cmds.\"",
    "tslint": "ethereumjs-config-tslint",
    "tslint:fix": "ethereumjs-config-tslint-fix",
    "lint": "ethereumjs-config-lint",
    "lint:fix": "ethereumjs-config-lint-fix",
    "format": "ethereumjs-config-format",
    "format:fix": "ethereumjs-config-format-fix",
    "formatTest": "node ./scripts/formatTest",
    "tsc": "ethereumjs-config-tsc"
  },
  "husky": {
    "hooks": {
      "pre-push": "npm run lint"
    }
  },
  "scripts": {
    "postinstall": "npm run bootstrap",
    "bootstrap": "lerna bootstrap --ignore-scripts --include-dependencies --no-ci --hoist && npm run build",
    "bootstrap:account": "npm run bootstrap -- --scope @ethereumjs/account",
    "bootstrap:block": "npm run bootstrap -- --scope @ethereumjs/block",
    "bootstrap:blockchain": "npm run bootstrap -- --scope @ethereumjs/blockchain",
    "bootstrap:common": "npm run bootstrap -- --scope @ethereumjs/common",
    "bootstrap:ethash": "npm run bootstrap -- --scope @ethereumjs/ethash",
    "bootstrap:tx": "npm run bootstrap -- --scope @ethereumjs/tx",
    "bootstrap:vm": "npm run bootstrap -- --scope @ethereumjs/vm",
    "build": "lerna run build --stream",
    "build:tree": "lerna run build --stream --include-dependencies",
    "build:account": "npm run build:tree -- --scope @ethereumjs/account",
    "build:block": "npm run build:tree -- --scope @ethereumjs/block",
    "build:blockchain": "npm run build:tree -- --scope @ethereumjs/blockchain",
    "build:common": "npm run build:tree -- --scope @ethereumjs/common",
    "build:ethash": "npm run build:tree -- --scope @ethereumjs/ethash",
    "build:tx": "npm run build:tree -- --scope @ethereumjs/tx",
    "build:vm": "npm run build:tree -- --scope @ethereumjs/vm",
    "lint": "lerna run lint --stream --parallel",
    "lint:fix": "lerna run lint:fix --stream --parallel",
    "test": "lerna exec npm run test --parallel",
    "coverage": "lerna run coverage --stream"
  }
}
